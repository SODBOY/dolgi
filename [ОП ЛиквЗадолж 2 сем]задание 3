public class LongestIncreasingSubsequence {
    public static int[] findLIS(int[] arr) {
        if (arr == null || arr.length == 0) {
            throw new IllegalArgumentException("Массив не может быть пустым или null");
        }

        int n = arr.length;
        int[] lengths = new int[n];
        int[] prev = new int[n];
        
        for (int i = 0; i < n; i++) {
            lengths[i] = 1;
            prev[i] = -1;
        }
        
        int maxLength = 1;
        int endIndex = 0;
        
        for (int i = 1; i < n; i++) {
            for (int j = 0; j < i; j++) {
                if (arr[i] > arr[j] && lengths[i] < lengths[j] + 1) {
                    lengths[i] = lengths[j] + 1;
                    prev[i] = j;
                    
                    if (lengths[i] > maxLength) {
                        maxLength = lengths[i];
                        endIndex = i;
                    }
                }
            }
        }
        
        int[] result = new int[maxLength];
        int currentIndex = endIndex;
        for (int i = maxLength - 1; i >= 0; i--) {
            result[i] = arr[currentIndex];
            currentIndex = prev[currentIndex];
        }
        
        return result;
    }
    
    public static void printArray(int[] arr) {
        System.out.print("Наибольшая возрастающая подпоследовательность: ");
        for (int num : arr) {
            System.out.print(num + " ");
        }
        System.out.println();
    }
    
    public static void main(String[] args) {
        int[] arr = {10, 22, 9, 33, 21, 50, 41, 60, 80};
        int[] lis = findLIS(arr);
        printArray(lis);
    }
}
